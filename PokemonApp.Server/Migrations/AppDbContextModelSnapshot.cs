// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokemonApp.Server.Infrastructure;

#nullable disable

namespace PokemonApp.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PokemonApp.Server.Models.Ability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.ToTable("Ability");
                });

            modelBuilder.Entity("PokemonApp.Server.Models.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FrontDefaultImage")
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(12)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Pokemon");
                });

            modelBuilder.Entity("PokemonApp.Server.Models.PokemonAbility", b =>
                {
                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.Property<int>("AbilityId")
                        .HasColumnType("int");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("bit");

                    b.Property<int>("Slot")
                        .HasColumnType("int");

                    b.HasKey("PokemonId", "AbilityId");

                    b.HasIndex("AbilityId");

                    b.ToTable("PokemonAbilities");
                });

            modelBuilder.Entity("PokemonApp.Server.Models.PokemonType", b =>
                {
                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int>("Slot")
                        .HasColumnType("int");

                    b.HasKey("PokemonId", "TypeId");

                    b.HasIndex("TypeId");

                    b.ToTable("PokemonTypes");
                });

            modelBuilder.Entity("PokemonApp.Server.Models.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.ToTable("Type");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Normal",
                            Url = "https://pokeapi.co/api/v2/type/1/"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Fighting",
                            Url = "https://pokeapi.co/api/v2/type/2/"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Flying",
                            Url = "https://pokeapi.co/api/v2/type/3/"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Poison",
                            Url = "https://pokeapi.co/api/v2/type/4/"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Ground",
                            Url = "https://pokeapi.co/api/v2/type/5/"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Rock",
                            Url = "https://pokeapi.co/api/v2/type/6/"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Bug",
                            Url = "https://pokeapi.co/api/v2/type/7/"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Ghost",
                            Url = "https://pokeapi.co/api/v2/type/8/"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Steel",
                            Url = "https://pokeapi.co/api/v2/type/9/"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Fire",
                            Url = "https://pokeapi.co/api/v2/type/10/"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Water",
                            Url = "https://pokeapi.co/api/v2/type/11/"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Grass",
                            Url = "https://pokeapi.co/api/v2/type/12/"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Electric",
                            Url = "https://pokeapi.co/api/v2/type/13/"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Psychic",
                            Url = "https://pokeapi.co/api/v2/type/14/"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Ice",
                            Url = "https://pokeapi.co/api/v2/type/15/"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Dragon",
                            Url = "https://pokeapi.co/api/v2/type/16/"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Dark",
                            Url = "https://pokeapi.co/api/v2/type/17/"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Fairy",
                            Url = "https://pokeapi.co/api/v2/type/18/"
                        });
                });

            modelBuilder.Entity("PokemonApp.Server.Models.PokemonAbility", b =>
                {
                    b.HasOne("PokemonApp.Server.Models.Ability", "Ability")
                        .WithMany("PokemonAbilities")
                        .HasForeignKey("AbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokemonApp.Server.Models.Pokemon", "Pokemon")
                        .WithMany("Abilities")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ability");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("PokemonApp.Server.Models.PokemonType", b =>
                {
                    b.HasOne("PokemonApp.Server.Models.Pokemon", "Pokemon")
                        .WithMany("Types")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokemonApp.Server.Models.Type", "Type")
                        .WithMany("PokemonTypes")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pokemon");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("PokemonApp.Server.Models.Ability", b =>
                {
                    b.Navigation("PokemonAbilities");
                });

            modelBuilder.Entity("PokemonApp.Server.Models.Pokemon", b =>
                {
                    b.Navigation("Abilities");

                    b.Navigation("Types");
                });

            modelBuilder.Entity("PokemonApp.Server.Models.Type", b =>
                {
                    b.Navigation("PokemonTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
